generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    user_id     Int         @id @default(autoincrement())
    name        String
    username    String      @unique
    password    String
    email       String      @unique
    role        String
    is_super    Boolean     @default(false)

    tasks       Task[]      @relation("CreatedTasks") // created_by
    ownedTasks  Task[]      @relation("OwnedTasks")   // owner_id
    taskRoles   TaskUser[] 
    taskAdminOf TaskAdmin[] @relation("AdminOfTasks")
    logs        Log[] 
}


model Task {
    task_id        Int         @id @default(autoincrement())
    title          String
    description    String?
    created_by     Int
    owner_id       Int
    parent_task_id Int?        // For subtask hierarchy

    creator        User        @relation("CreatedTasks", fields: [created_by], references: [user_id])
    owner          User        @relation("OwnedTasks", fields: [owner_id], references: [user_id])
    parent_task    Task?       @relation("Subtasks", fields: [parent_task_id], references: [task_id])
    subtasks       Task[]      @relation("Subtasks")

    admin          TaskAdmin?
    taskUsers      TaskUser[]
    logs           Log[]
}


model Role {
    role_id     Int          @id @default(autoincrement())
    role_name   String       @unique
    permissions Permission[] @relation("RolePermissions")
    taskUsers   TaskUser[]
}

model Permission {
    id    Int    @id @default(autoincrement())
    name  String @unique
    roles Role[] @relation("RolePermissions")
}

model TaskAdmin {
    task_id  Int  @id
    admin_id Int
    task     Task @relation(fields: [task_id], references: [task_id])
    admin    User @relation("AdminOfTasks", fields: [admin_id], references: [user_id])
}

model TaskUser {
    task_id Int
    user_id Int
    role_id Int

    task Task @relation(fields: [task_id], references: [task_id])
    user User @relation(fields: [user_id], references: [user_id])
    role Role @relation(fields: [role_id], references: [role_id])

    @@id([task_id, user_id])
}

model Log {
    log_id    Int      @id @default(autoincrement())
    task_id   Int
    user_id   Int?
    action    String
    timestamp DateTime @default(now())

    task Task  @relation(fields: [task_id], references: [task_id])
    user User? @relation(fields: [user_id], references: [user_id])
}


enum PermissionEnum {
  READ
  WRITE
  DELETE
  ASSIGN
}
